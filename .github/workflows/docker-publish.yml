name: DockerRunner

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: vcolovic/github-runner:latest
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3 
        with:
          token: ${{secrets.GITHUB_TOKEN}}  
          
      - name: Push image
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: vcolovic/github-runner:${{steps.buildnumber.outputs.build_number}},vcolovic/github-runner:latest
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  start_runner:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:  
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get
      run: |
        curl --location --request POST 'https://api.github.com/repos/cholenssen/ci-testing/actions/runners/registration-token' \
        --header 'Authorization: token 2247b40121962692430061ae4e3d5be37f7d7880' \
        --header 'accept: application/vnd.github.v3+json'
    - name: start container
      run: docker run --env ACCESS_TOKEN=${{secrets.API_KEY}} --env REPO=https://github.com/${{github.repository}} vcolovic/github-runner:latest 